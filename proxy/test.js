var fcp = require("./fcp");
var commandParser = require('./commandParser');

var packets1 = [
	new Buffer([0x81, 0x67, 0x5b, 0x49, 0x06, 0x50, 0x57, 0xd4, 0xf8, 0x58, 0xe1, 0xbf, 0x8b, 0x53, 0xa2, 0xbc, 0xd6, 0x04, 0xe5, 0xb5]),
	new Buffer([0x6c, 0x41, 0x83, 0x63, 0x62, 0x85, 0x15, 0x7d, 0x0b, 0xa7, 0x58, 0xf2, 0x94, 0x1e, 0xde, 0x67, 0xe0, 0xeb, 0x81, 0xbb, 0x83, 0xa8, 0x8e, 0x0a, 0xc4, 0x7b, 0x36, 0xf4, 0xc2, 0x64, 0x78, 0x4b, 0xe5, 0x13, 0x76, 0x61, 0x42, 0x2c, 0xcd, 0x0c, 0x66, 0x5e, 0x4e, 0x5d, 0xc1, 0x09, 0x26, 0x01, 0x51, 0xdb, 0x2f, 0xe1, 0x4a, 0x93, 0xec, 0x2a, 0xae, 0x4e, 0xa3, 0x63, 0x59, 0x55, 0xb6, 0xa5, 0x35, 0x14, 0xd7, 0x9a, 0x54, 0x8d, 0x16, 0x43, 0xaa, 0x2a, 0xdd, 0x65, 0x87, 0xdc, 0x01, 0x8b, 0x4f, 0x35, 0x3b, 0x11, 0xc3, 0x44, 0x68, 0x07, 0x5a, 0xc8, 0x77, 0xb8, 0x53, 0xad, 0xcf, 0x33, 0x0c, 0xe7, 0xa0, 0x2b, 0x2b, 0x56, 0x66, 0xce, 0x8e, 0xd0, 0xb1, 0x27, 0x3a, 0x14, 0x28, 0xa5, 0xba, 0x7f, 0xed, 0x58, 0x20, 0xd1, 0x62, 0x8f, 0x5a, 0xbc, 0x4a, 0xab, 0x46, 0xe3, 0x4d, 0x53, 0x8e, 0xe1, 0xe0, 0x3e, 0xcd, 0x81, 0x25, 0xfe, 0x80, 0xe5, 0xd2, 0x61]),
	new Buffer([0x3f, 0xfc, 0xe3, 0xbb, 0x19, 0x85, 0x7e, 0x1e, 0xa2, 0x34, 0xd5, 0x47, 0x00, 0x8b, 0x11, 0xd4]),
	new Buffer([0x3c, 0x9c, 0x2e, 0x49, 0x88, 0x29, 0x78, 0x86, 0xe5, 0x52, 0x1c, 0xb6, 0xe8, 0x14]),
	new Buffer([0xbd, 0x07, 0xa2, 0xcd, 0xfa, 0xaf, 0x59, 0x72, 0xa8, 0xba, 0x1b, 0x67, 0x75, 0xaf, 0x23, 0x1e, 0xba, 0x8f, 0xd9, 0xa4, 0x3a, 0xea, 0xe4, 0x69, 0x13, 0x78, 0x0c, 0xe8, 0xb9, 0xd7, 0xc1, 0x77, 0x26, 0xa6, 0x3f, 0xcf, 0x48, 0xc3, 0xbe, 0x79, 0x03, 0x4e, 0x20, 0xc2]),
	new Buffer([0xa8, 0xe8, 0xdd, 0x39, 0xb9, 0x75, 0xcc, 0x6b, 0x30, 0xe4, 0x80, 0x36, 0xa5, 0x72, 0x1a, 0x61, 0xab, 0xb2, 0xf9, 0xec, 0x7a, 0x0f, 0xca, 0xd7, 0x14, 0x06, 0xb9, 0x22, 0xec, 0xdb, 0x70, 0xc0, 0xcf, 0x1d, 0x9c, 0xd8, 0x66, 0x38, 0x6c, 0x40]),
	new Buffer([0xbe, 0x35, 0x77, 0xf1, 0xdc, 0xa2]),
	new Buffer([0xc8, 0xe3, 0x57, 0xc4, 0x3d, 0x4b, 0xe3, 0xaf, 0x3e, 0xc5, 0xec, 0xfa, 0x6f, 0x81, 0x1f]),
	new Buffer([0x48, 0x5f, 0xa7, 0xa4, 0x03, 0xf5, 0x31, 0x1b, 0xda, 0x98, 0xe7, 0xe6])
];

var packets2 = [
	new Buffer([0x81, 0x67, 0x5b, 0x49, 0x06, 0x50, 0x57, 0xd4, 0xf8, 0x58, 0xe1, 0xbf, 0x8b, 0x53, 0xb8, 0x13, 0x3a, 0x70, 0xe5, 0xb5]),
	new Buffer([0x76, 0xee, 0x6f, 0x17, 0x04, 0x44, 0x73, 0xd1, 0xe4, 0x52, 0x81, 0x26, 0xda, 0x3e, 0x7a, 0x86, 0xc8, 0xb0, 0x9e, 0x7a, 0x2d, 0x62, 0x39, 0x3f, 0x09, 0x42, 0x93, 0x38, 0x39, 0x61, 0xce, 0xb6, 0xe0, 0x21, 0x4e, 0xa6, 0x41, 0x90, 0x7f, 0x16, 0x05, 0xea, 0xc0, 0xea, 0x47, 0x1e, 0x52, 0xf2, 0xdd, 0x1c, 0x8b, 0x8c, 0xf6, 0xb9, 0x17, 0xad, 0xb4, 0x74, 0x81, 0xb3, 0x2c, 0x6c, 0x2e, 0x6f, 0xc4, 0xc2, 0x8a, 0x92, 0xcc, 0xf1, 0x12, 0x1c, 0x03, 0x57, 0x54, 0x39, 0x53, 0x51, 0x93, 0xd0, 0x07, 0x03, 0xa1, 0x4a, 0xe0, 0x3c, 0xfe, 0xad, 0x38, 0x37, 0x5a, 0xbc, 0x2b, 0x41, 0xcd, 0x58, 0x29, 0x0a, 0x43, 0x69, 0x6e, 0x91, 0xdd, 0x6e, 0xd3, 0xd2, 0x81, 0x1f, 0x95, 0xfb, 0x69, 0x20, 0x3d, 0x24, 0x85, 0x01, 0x42, 0xd0, 0x1a, 0x50, 0x47, 0xb7, 0x37, 0x13, 0xfd, 0x94, 0xa4, 0x6e, 0x57, 0x52, 0x02, 0x0a, 0x87, 0x42, 0xda, 0xb1, 0xd6, 0xe3, 0x20, 0x41]),
	new Buffer([0xb2, 0x43, 0x70, 0x4f, 0x5c, 0x40, 0x7b, 0xf2, 0x3c, 0x4b, 0x8d, 0x93, 0x5d, 0xfc, 0xd4, 0xa8]),
	new Buffer([0x91, 0x88, 0x80, 0xb5, 0x94, 0xc0, 0x7f, 0x92, 0x84, 0xca, 0x05, 0x3a, 0x76, 0x8f]),
	new Buffer([0x5f, 0xeb, 0xdf, 0x59, 0xfa, 0x4b, 0x06, 0x7e, 0x9b, 0x8b, 0x69, 0xd3, 0x59, 0xe5, 0x0a, 0x0c, 0xeb, 0x3e, 0x3a, 0x27, 0xa6, 0x6f, 0x45, 0x0b, 0xf0, 0x0e, 0x10, 0x77, 0x72, 0x6d, 0x58, 0x13, 0x92, 0xf3, 0x72, 0xee, 0x11, 0x8f, 0xe5, 0x34, 0x75, 0x8a, 0x56, 0xe3]),
	new Buffer([0x14, 0xdf, 0x69, 0x35, 0xa3, 0x37, 0xdf, 0xf7, 0x62, 0xe0, 0x1f, 0x42, 0x16, 0xe1, 0x9a, 0xed, 0x4b, 0x12, 0x8b, 0xf8, 0x05, 0x61, 0x9e, 0x63, 0x09, 0x92, 0xfe, 0x2e, 0x93, 0xf0, 0x57, 0x54, 0x46, 0xa2, 0x54, 0xe4, 0x26, 0x01, 0x25, 0xcc]),
	new Buffer([0x7b, 0x35, 0x8c, 0xe5, 0x39, 0x9f]),
	new Buffer([0xc5, 0x8a, 0x35, 0xd0, 0xce, 0xce, 0x83, 0x3b, 0x00, 0x9c, 0x7e, 0x06, 0x6c, 0x29, 0xd2]),
	new Buffer([0xb6, 0x9c, 0xab, 0xa8, 0xcd, 0x94, 0xb6, 0xa7, 0xd8, 0x29, 0x1e, 0xf2])
];

function thing(packets, specials) {
	var txSeed = 2171034441;
	var rxSeed = 2171034441;

	for (var i = 0; i < packets.length; i++) {
		var packet = packets[i];
		console.log(packet.length);
		var result = fcp.encrypt(packet, txSeed);
		console.log(result);
		txSeed = result.newSeed;
		console.log("[*] txSeed is now " + txSeed);
		if (i == 0) {
			// special case
			txSeed = specials[0];
			console.log("[*] txSeed special case to " + txSeed);
		}
		if (i == 2) {
			txSeed = specials[1];
			console.log("[*] txSeed special case to " + txSeed);
		}
	}
}

thing(packets1, [
	0x93b687d2,
	0xC3662DBB
]);


console.log("==================================================================");
console.log("==================================================================");
console.log("==================================================================");
console.log("==================================================================");


thing(packets2, [
	0x89196ba6,
	0x6E728347
]);

console.log("==================================================================");
console.log("==================================================================");
console.log("==================================================================");
console.log("==================================================================");

var seed = 898956563;
for (var i = 0; i < 5; i++) {
	console.log("[*] seed is " + seed);
	seed += (seed << 5) & 0xFFFFFFFF;
	seed += 0x57FD936B;
	seed = seed & 0xFFFFFFFF;
	seed = seed >>> 0;
}